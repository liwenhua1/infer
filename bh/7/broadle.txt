#0
admin/broadleaf-admin-module/src/main/java/org/broadleafcommerce/admin/server/service/handler/ProductCustomPersistenceHandler.java:318: error: Null Dereference
  `defaultCategory` could be null (null value originating from line 317) and is dereferenced. 
  316.   
  317.               BasicFieldMetadata defaultCategory = ((BasicFieldMetadata) adminProperties.get("defaultCategory"));
  318. >             defaultCategory.setFriendlyName("ProductImpl_Parent_Category");
  319.               if (entity.findProperty("defaultCategory") != null && !StringUtils.isEmpty(entity.findProperty("defaultCategory").getValue())) {
  320.                   //Change the inherited type so that this property is disconnected from the entity and validation is temporarily skipped.

#1
admin/broadleaf-admin-module/src/main/java/org/broadleafcommerce/admin/server/service/handler/ProductCustomPersistenceHandler.java:399: error: Null Dereference
  null (null value originating from line 399) is dereferenced. 
  397.       protected void removeBundleFieldRestrictions(ProductBundle adminInstance, Map<String, FieldMetadata> adminProperties, Entity entity) {
  398.           //no required validation for product bundles
  399. >         ((BasicFieldMetadata) adminProperties.get("defaultSku.retailPrice")).setRequiredOverride(false);
  400.           if (entity.getPMap().get("pricingModel") != null) {
  401.               if (ProductBundlePricingModelType.BUNDLE.getType().equals(entity.getPMap().get("pricingModel").getValue())) {

#2
admin/broadleaf-contentmanagement-module/src/main/java/org/broadleafcommerce/cms/structure/service/StructuredContentServiceImpl.java:500: error: Null Dereference
  null (null value originating from line 500) is dereferenced. 
  498.   
  499.           for (String fieldKey : scFieldXrefs.keySet()) {
  500. >             StructuredContentField scf = scFieldXrefs.get(fieldKey).getStructuredContentField();
  501.               String originalValue = scf.getValue();
  502.   

#3
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/dto/ClassMetadata.java:157: error: Null Dereference
  `result` could be null (null value originating from line 153) and is dereferenced. 
  155.           while(tabMetadataIterator.hasNext()) {
  156.               TabMetadata next = tabMetadataIterator.next();
  157. >             if (result.getTabOrder() == null) {
  158.                   result = next;
  159.               } else if (next.getTabOrder() != null && next.getTabOrder() < result.getTabOrder()) {

#4
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/dto/TabMetadata.java:77: error: Null Dereference
  `result` could be null (null value originating from line 73) and is dereferenced. 
  75.           while(groupMetadataIterator.hasNext()) {
  76.               GroupMetadata next = groupMetadataIterator.next();
  77. >             if (result.getGroupOrder() == null) {
  78.                   result = next;
  79.               } else if (next.getGroupOrder() != null && next.getGroupOrder() < result.getGroupOrder()) {

#5
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/dao/DynamicEntityDaoImpl.java:1490: error: Null Dereference
  `foreignKey` could be null (null value originating from line 1489) and is dereferenced. 
  1488.       protected void setOriginatingFieldForForeignKey(String propertyName, String key, FieldMetadata fieldMetadata) {
  1489.           ForeignKey foreignKey = (ForeignKey) ((BasicCollectionMetadata) fieldMetadata).getPersistencePerspective().getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.FOREIGNKEY);
  1490. >         foreignKey.setOriginatingField(propertyName + '.' + key);
  1491.       }
  1492.   

#6
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/AdminEntityServiceImpl.java:485: error: Null Dereference
  null (null value originating from line 485) is dereferenced. 
  483.           Map<String, TabMetadata> tabMetadataMap = cmd.getTabAndGroupMetadata();
  484.           for (String tabKey : tabMetadataMap.keySet()) {
  485. >             Map<String, GroupMetadata> groupMetadataMap = tabMetadataMap.get(tabKey).getGroupMetadata();
  486.               for (String groupKey : groupMetadataMap.keySet()) {
  487.                   if (groupKey.equals(fmd.getGroup()) || groupMetadataMap.get(groupKey).getGroupName().equals(fmd.getGroup())) {

#7
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence/module/AdornedTargetListPersistenceModule.java:207: error: Null Dereference
  `adornedTargetList` could be null (null value originating from line 206) and is dereferenced. 
  205.           Entity entity = persistencePackage.getEntity();
  206.           AdornedTargetList adornedTargetList = (AdornedTargetList) persistencePerspective.getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.ADORNEDTARGETLIST);
  207. >         if (!adornedTargetList.getMutable()) {
  208.               throw new SecurityServiceException("Field is not mutable");
  209.           }

#8
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence/module/AdornedTargetListPersistenceModule.java:321: error: Null Dereference
  `adornedTargetList` could be null (null value originating from line 320) and is dereferenced. 
  319.           Entity entity = persistencePackage.getEntity();
  320.           AdornedTargetList adornedTargetList = (AdornedTargetList) persistencePerspective.getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.ADORNEDTARGETLIST);
  321. >         if (!adornedTargetList.getMutable()) {
  322.               throw new SecurityServiceException("Field is not mutable");
  323.           }

#9
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence/module/AdornedTargetListPersistenceModule.java:401: error: Null Dereference
  `adornedTargetList` could be null (null value originating from line 400) and is dereferenced. 
  399.           try {
  400.               AdornedTargetList adornedTargetList = (AdornedTargetList) persistencePerspective.getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.ADORNEDTARGETLIST);
  401. >             if (!adornedTargetList.getMutable()) {
  402.                   throw new SecurityServiceException("Field is not mutable");
  403.               }

#10
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence/module/BasicPersistenceModule.java:1640: error: Null Dereference
  `field` could be null (from the call to `FieldManager.getField(...)` on line 1639) and is dereferenced. 
  1638.           Class<?> returnType = null;
  1639.           Field field = fieldManager.getField(instance.getClass(), property.getName().substring(0, property.getName().indexOf(FieldManager.MAPFIELDSEPARATOR)));
  1640. >         java.lang.reflect.Type type = field.getGenericType();
  1641.           if (type instanceof ParameterizedType) {
  1642.               ParameterizedType pType = (ParameterizedType) type;

#11
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence/module/FieldManager.java:232: error: Null Dereference
  The call to `Object FieldManager.setFieldValue(Object,String,Object)` may trigger the following issue: `(*persistedEntities)->__infer_model_backing_collection_empty` could be null (from the call to `FieldManager.setFieldValue(...)` on line 140) and is dereferenced in the call to `FieldManager.setFieldValue(...)`. 
  230.               Serializable s = entityManager.merge(val.entity);
  231.               persistedEntities.put(val.getContainingPropertyName(), s);
  232. >             setFieldValue(val.getBean(), val.getContainingPropertyName(), s);
  233.           }
  234.   

#12
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence/module/FieldManager.java:232: error: Null Dereference
  The call to `Object FieldManager.setFieldValue(Object,String,Object)` may trigger the following issue: null (from the call to `FieldManager.setFieldValue(...)` on line 140) is dereferenced in the call to `FieldManager.setFieldValue(...)`. 
  230.               Serializable s = entityManager.merge(val.entity);
  231.               persistedEntities.put(val.getContainingPropertyName(), s);
  232. >             setFieldValue(val.getBean(), val.getContainingPropertyName(), s);
  233.           }
  234.   

#13
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence/module/MapStructurePersistenceModule.java:177: error: Null Dereference
  `mapStructure` could be null (null value originating from line 176) and is dereferenced. 
  175.           Entity entity = persistencePackage.getEntity();
  176.           MapStructure mapStructure = (MapStructure) persistencePerspective.getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.MAPSTRUCTURE);
  177. >         if (!mapStructure.getMutable()) {
  178.               throw new SecurityServiceException("Field not mutable");
  179.           }

#14
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence/module/MapStructurePersistenceModule.java:281: error: Null Dereference
  null (null value originating from line 281) is dereferenced. 
  279.       
  280.       protected Object convertPrimitiveBasedOnType(String valuePropertyName, String value, Map<String, FieldMetadata> valueMergedProperties) throws ParseException {
  281. >         switch(((BasicFieldMetadata) valueMergedProperties.get(valuePropertyName)).getFieldType()) {
  282.               case BOOLEAN :
  283.                   return Boolean.parseBoolean(value);

#15
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence/module/MapStructurePersistenceModule.java:306: error: Null Dereference
  `mapStructure` could be null (null value originating from line 305) and is dereferenced. 
  304.           Entity entity = persistencePackage.getEntity();
  305.           MapStructure mapStructure = (MapStructure) persistencePerspective.getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.MAPSTRUCTURE);
  306. >         if (!mapStructure.getMutable()) {
  307.               throw new SecurityServiceException("Field not mutable");
  308.           }

#16
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence/module/MapStructurePersistenceModule.java:427: error: Null Dereference
  `mapStructure` could be null (null value originating from line 426) and is dereferenced. 
  425.           Entity entity = persistencePackage.getEntity();
  426.           MapStructure mapStructure = (MapStructure) persistencePerspective.getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.MAPSTRUCTURE);
  427. >         if (!mapStructure.getMutable()) {
  428.               throw new SecurityServiceException("Field not mutable");
  429.           }

#17
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence/module/criteria/RestrictionFactoryImpl.java:45: error: Null Dereference
  null (null value originating from line 45) is dereferenced. 
  43.       @Override
  44.       public Restriction getRestriction(String type, String propertyId) {
  45. >         Restriction restriction = restrictions.get(type).clone();
  46.           restriction.setFieldPathBuilder(new FieldPathBuilder());
  47.   

#18
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence/module/extension/DefaultBasicPersistenceModuleExtensionHandler.java:77: error: Null Dereference
  `foreignKey` could be null (null value originating from line 75) and is dereferenced. 
  75.                       (PersistencePerspectiveItemType.FOREIGNKEY);
  76.               CriteriaTransferObject cto = new CriteriaTransferObject();
  77. >             FilterAndSortCriteria sortCriteria = cto.get(foreignKey.getSortField());
  78.               sortCriteria.setSortAscending(foreignKey.getSortAscending());
  79.               List<FilterMapping> filterMappings = basicPersistenceModule.getFilterMappings(persistencePerspective,

#19
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence/module/extension/DefaultBasicPersistenceModuleExtensionHandler.java:110: error: Null Dereference
  `foreignKey` could be null (null value originating from line 109) and is dereferenced. 
  108.               ForeignKey foreignKey = (ForeignKey) persistencePerspective.getPersistencePerspectiveItems().get
  109.                       (PersistencePerspectiveItemType.FOREIGNKEY);
  110. >             Integer requestedSequence = Integer.valueOf(entity.findProperty(foreignKey.getSortField()).getValue());
  111.               Integer previousSequence = new BigDecimal(String.valueOf(basicPersistenceModule.getFieldManager()
  112.                       .getFieldValue(instance, foreignKey.getSortField()))).intValue();

#20
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence/module/provider/AbstractFieldPersistenceProvider.java:41: error: Null Dereference
  `field` could be null (from the call to `FieldManager.getField(...)` on line 40) and is dereferenced. 
  39.           Class<?> returnType = null;
  40.           Field field = fieldManager.getField(instance.getClass(), property.getName());
  41. >         java.lang.reflect.Type type = field.getGenericType();
  42.           if (type instanceof ParameterizedType) {
  43.               ParameterizedType pType = (ParameterizedType) type;

#21
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence/module/provider/AbstractFieldPersistenceProvider.java:56: error: Null Dereference
  `field` could be null (from the call to `FieldManager.getField(...)` on line 55) and is dereferenced. 
  54.           Class<?> returnType = null;
  55.           Field field = fieldManager.getField(instance.getClass(), property.getName().substring(0, property.getName().indexOf(FieldManager.MAPFIELDSEPARATOR)));
  56. >         java.lang.reflect.Type type = field.getGenericType();
  57.           if (type instanceof ParameterizedType) {
  58.               ParameterizedType pType = (ParameterizedType) type;

#22
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/server/service/persistence/module/provider/RuleFieldPersistenceProvider.java:460: error: Null Dereference
  `field` could be null (from the call to `FieldManager.getField(...)` on line 459) and is dereferenced. 
  458.           String prop = populateValueRequest.getProperty().getName();
  459.           Field field = populateValueRequest.getFieldManager().getField(instance.getClass(), prop);
  460. >         OneToMany oneToMany = field.getAnnotation(OneToMany.class);
  461.           if (oneToMany == null) {
  462.               throw new UnsupportedOperationException("RuleFieldPersistenceProvider is currently only compatible with collection fields when modelled using @OneToMany");

#23
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/web/compatibility/JSCompatibilityRequestWrapper.java:106: error: Null Dereference
  `vals` could be null (null value originating from line 101) and is dereferenced. 
  104.               } else {
  105.                   String[] vals = (String[]) value;
  106. >                 String[] tempVals = new String[vals.length];
  107.                   int j = 0;
  108.                   for (String val : vals) {

#24
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/web/controller/entity/AdminBasicEntityController.java:537: error: Null Dereference
  `TabMetadata ClassMetadata.getFirstTab()` could be null (from the call to `ClassMetadata.getFirstTab()` on line 537) and is dereferenced. 
  535.           String tabName = pathVars.get("tabName");
  536.           if (StringUtils.isEmpty(tabName)) {
  537. >             tabName = cmd.getFirstTab() == null ? "General" : cmd.getFirstTab().getTabName();
  538.           }
  539.           return service.getRecordsForSelectedTab(cmd, entity, crumbs, tabName);

#25
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/web/filter/BroadleafAdminTypedEntityRequestFilter.java:146: error: Null Dereference
  `response` could be null (null value originating from line 142) and is dereferenced. 
  144.                       return null;
  145.                   } else {
  146. >                     return response[0];
  147.                   }
  148.               }

#26
admin/broadleaf-open-admin-platform/src/main/java/org/broadleafcommerce/openadmin/web/service/FormBuilderServiceImpl.java:2026: error: Null Dereference
  `foreignKey` could be null (null value originating from line 2025) and is dereferenced. 
  2024.           ForeignKey foreignKey = (ForeignKey) mapMd.getPersistencePerspective()
  2025.                   .getPersistencePerspectiveItems().get(PersistencePerspectiveItemType.FOREIGNKEY);
  2026. >         ef.setEntityType(foreignKey.getForeignKeyClass());
  2027.   
  2028.           Field keyField;

#27
common/src/main/java/org/broadleafcommerce/common/condition/OnBroadleafModuleCondition.java:49: error: Null Dereference
  `modules` could be null (null value originating from line 46) and is dereferenced. 
  47.           List<Object> moduleNames = attributes.get("moduleName");
  48.           List<String> moduleNameStrings = new ArrayList<>();
  49. >         for (int i = 0; i < modules.size(); ++i) {
  50.               BroadleafModuleEnum module = (BroadleafModuleEnum) modules.get(i);
  51.               String moduleName = (BroadleafModuleEnum.IGNORED != module) ? module.getName() : (String) moduleNames.get(i);

#28
common/src/main/java/org/broadleafcommerce/common/config/PostAutoConfigurationDefferedImportSelector.java:55: error: Null Dereference
  `importAttributes` could be null (null value originating from line 53) and is dereferenced. 
  53.           Object importAttributes = attributes.get("value");
  54.           List<String> imports = new ArrayList<>();
  55. >         for (String[] classes : (List<String[]>) importAttributes) {
  56.               imports.addAll(Arrays.asList(classes));
  57.           }

#29
common/src/main/java/org/broadleafcommerce/common/email/service/jms/JMSEmailServiceProducerImpl.java:50: error: Null Dereference
  `info` could be null (null value originating from line 49) and is dereferenced. 
  48.                       ObjectMessage message = session.createObjectMessage(sProps);
  49.                       EmailInfo info = (EmailInfo) props.get(EmailPropertyType.INFO.getType());
  50. >                     message.setJMSPriority(Integer.parseInt(info.getSendAsyncPriority()));
  51.                       return message;
  52.                   }

#30
common/src/main/java/org/broadleafcommerce/common/extensibility/jpa/QueryConfigurationClassTransformer.java:91: error: Pulse Resource Leak
  Resource dynamically allocated by constructor java.io.DataInputStream() on line 91 is not closed after the last access at line 91. 
  89.           if (managedClassNames.contains(convertedClassName)) {
  90.               try {
  91. >                 ClassFile classFile = new ClassFile(new DataInputStream(new ByteArrayInputStream(classfileBuffer)));
  92.                   if (isExecuted) {
  93.                       return null;

#31
common/src/main/java/org/broadleafcommerce/common/extensibility/jpa/convert/AlterTableNameClassTransformer.java:123: error: Pulse Resource Leak
  Resource dynamically allocated by constructor java.io.DataInputStream() on line 123 is not closed after the last access at line 123. 
  121.                       LOG.debug("Altering " + convertedClassName + " table name");
  122.                   }
  123. >                 ClassFile classFile = new ClassFile(new DataInputStream(new ByteArrayInputStream(classfileBuffer)));
  124.                   ConstPool constantPool = classFile.getConstPool();
  125.   

#32
common/src/main/java/org/broadleafcommerce/common/extensibility/jpa/convert/EntityMarkerClassTransformer.java:80: error: Pulse Resource Leak
  Resource dynamically allocated by constructor java.io.DataInputStream() on line 80 is not closed after the last access at line 80. 
  78.   
  79.           try {
  80. >             ClassFile classFile = new ClassFile(new DataInputStream(new ByteArrayInputStream(classfileBuffer)));
  81.               List<?> attributes = classFile.getAttributes();
  82.               Iterator<?> itr = attributes.iterator();

#33
common/src/main/java/org/broadleafcommerce/common/extensibility/jpa/convert/MaterializedClobTypeClassTransformer.java:92: error: Pulse Resource Leak
  Resource dynamically allocated by constructor java.io.DataInputStream() on line 92 is not closed after the last access at line 92. 
  90.           try {
  91.               boolean transformed = false;
  92. >             ClassFile classFile = new ClassFile(new DataInputStream(new ByteArrayInputStream(classfileBuffer)));
  93.               boolean containsTypeLevelAnnotation = false;
  94.               {

#34
common/src/main/java/org/broadleafcommerce/common/io/ConcurrentFileOutputStreamImpl.java:80: error: Pulse Resource Leak
  Resource dynamically allocated by constructor java.io.FileOutputStream() on line 67 is not closed after the last access at line 80. 
  78.           fos.close();
  79.   
  80. >         return totalWrote;
  81.       }
  82.   

#35
common/src/main/java/org/broadleafcommerce/common/persistence/SequenceGeneratorCorruptionDetection.java:157: error: Null Dereference
  `tableName` could be null (null value originating from line 114) and is dereferenced. 
  155.                   sb2.append(valueColumnName);
  156.                   sb2.append(" from ");
  157. >                 if (!tableName.contains(".") && !StringUtils.isEmpty(defaultSchemaSequenceGenerator)) {
  158.                       sb2.append(defaultSchemaSequenceGenerator);
  159.                       sb2.append(".");

#36
common/src/main/java/org/broadleafcommerce/common/persistence/transaction/CompressedItem.java:53: error: Pulse Resource Leak
  Resource dynamically allocated by constructor java.util.zip.GZIPInputStream() on line 52 is not closed after the last access at line 53. 
  51.           }
  52.           GZIPInputStream gis = new GZIPInputStream(new ByteArrayInputStream(compressed));
  53. >         BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(gis, "UTF-8"));
  54.           StringBuilder sb = new StringBuilder();
  55.           String line;

#37
common/src/main/java/org/broadleafcommerce/common/service/PersistenceServiceImpl.java:116: error: Null Dereference
  `PlatformTransactionManager PersistenceServiceImpl.getTransactionManager(Map)` could be null (from the call to `PersistenceServiceImpl.getTransactionManager(...)` on line 121) and is dereferenced in the call to `StreamingTransactionCapableUtil.runTransactionalOperation(...)`. 
  114.                   final Map<String, Object> managerMap = targetModeMap.get(targetMode);
  115.   
  116. >                 transUtil.runTransactionalOperation(new StreamCapableTransactionalOperationAdapter() {
  117.                       @Override
  118.                       public void execute() throws Throwable {

#38
common/src/main/java/org/broadleafcommerce/common/service/PersistenceServiceImpl.java:121: error: Null Dereference
  `managerMap` could be null (null value originating from line 114) and is dereferenced in the call to `PersistenceServiceImpl.getTransactionManager(...)`. 
  119.                           populateCaches(targetMode, managerMap);
  120.                       }
  121. >                 }, RuntimeException.class, getTransactionManager(managerMap));
  122.               }
  123.           }

#39
common/src/main/java/org/broadleafcommerce/common/service/PersistenceServiceImpl.java:130: error: Null Dereference
  `em` could be null (from the call to `PersistenceServiceImpl.getEntityManager(...)` on line 127) and is dereferenced. 
  128.           final PlatformTransactionManager txManager = getTransactionManager(managerMap);
  129.   
  130. >         SessionFactory sessionFactory = em.unwrap(Session.class).getSessionFactory();
  131.           for (EntityType<?> item : sessionFactory.getMetamodel().getEntities()) {
  132.               Class<?> mappedClass = item.getJavaType();

#40
common/src/main/java/org/broadleafcommerce/common/service/PersistenceServiceImpl.java:186: error: Null Dereference
  `managerMap` could be null (null value originating from line 185) and is dereferenced in the call to `PersistenceServiceImpl.getEntityManager(...)`. 
  184.       public EntityManager identifyDefaultEntityManager(TargetModeType targetModeType) {
  185.           Map<String, Object> managerMap = defaultTargetModeMap.get(targetModeType.getType());
  186. >         return getEntityManager(managerMap);
  187.       }
  188.   

#41
common/src/main/java/org/broadleafcommerce/common/service/PersistenceServiceImpl.java:197: error: Null Dereference
  `managerMap` could be null (null value originating from line 196) and is dereferenced in the call to `PersistenceServiceImpl.getTransactionManager(...)`. 
  195.       public PlatformTransactionManager identifyDefaultTransactionManager(TargetModeType targetModeType) {
  196.           Map<String, Object> managerMap = defaultTargetModeMap.get(targetModeType.getType());
  197. >         return getTransactionManager(managerMap);
  198.       }
  199.   

#42
common/src/main/java/org/broadleafcommerce/common/sitemap/service/SiteMapServiceImpl.java:249: error: Pulse Resource Leak
  Resource dynamically allocated by constructor java.io.FileInputStream() on line 230 is not closed after the last access at line 249. 
  247.   
  248.   
  249. >             } catch (IOException e) {
  250.                   LOG.error("Error writing zip file.", e);
  251.               }

#43
common/src/main/java/org/broadleafcommerce/common/sitemap/service/SiteMapServiceImpl.java:253: error: Pulse Resource Leak
  Resource dynamically allocated by constructor java.io.FileOutputStream() on line 231 is not closed after the last access at line 253. 
  251.               }
  252.           }
  253. >     }
  254.   
  255.       /**

#44
common/src/main/java/org/broadleafcommerce/common/util/UpdateExecutor.java:169: error: Null Dereference
  `metadata` could be null (from the call to `HibernateMappingProvider.getMapping(...)` on line 168) and is dereferenced. 
  167.           //update the timestamp cache for the table so that queries will be refreshed
  168.           PersistentClass metadata = HibernateMappingProvider.getMapping(entityType.getName());
  169. >         String tableName = metadata.getTable().getName();
  170.           UpdateTimestampsCache timestampsCache = hibernateCache.getUpdateTimestampsCache();
  171.           if (timestampsCache != null) {

#45
common/src/main/java/org/broadleafcommerce/common/web/controller/FrameworkMvcUriComponentsBuilder.java:571: error: Null Dereference
  `wac` could be null (from the call to `FrameworkMvcUriComponentsBuilder.getWebApplicationContext()` on line 568) and is dereferenced. 
  569.           Assert.notNull(wac, "Cannot lookup handler method mappings without WebApplicationContext");
  570.           try {
  571. >             return wac.getBean(RequestMappingInfoHandlerMapping.class);
  572.           }
  573.           catch (NoUniqueBeanDefinitionException ex) {

#46
common/src/main/java/org/broadleafcommerce/common/web/payment/processor/TransparentRedirectCreditCardFormProcessor.java:140: error: Null Dereference
  `hiddenFields` could be null (null value originating from line 138) and is dereferenced. 
  138.           Map<String, String> hiddenFields = formParameters.get(formHiddenParamsKey.toString());
  139.           if (MapUtils.isNotEmpty(hiddenFields)) {
  140. >             for (String key : hiddenFields.keySet()) {
  141.                   Map<String, String> attributes = new HashMap<>();
  142.                   attributes.put("type", "hidden");

#47
common/src/main/java/org/broadleafcommerce/common/web/util/CachingCompressedResponseFilter.java:335: error: Pulse Resource Leak
  Resource dynamically allocated by constructor java.io.FileOutputStream() on line 330 is not closed after the last access at line 335. 
  333.           tempFile.delete();
  334.           atomicMove.replaceExisting(compressedFile, targetFile);
  335. >     }
  336.   
  337.       protected boolean useGzipCompression(HttpServletRequest request, HttpServletResponse response) throws MalformedURLException {

#48
common/src/main/java/org/broadleafcommerce/common/web/util/CachingCompressedResponseFilter.java:335: error: Pulse Resource Leak
  Resource dynamically allocated by constructor java.util.zip.GZIPOutputStream() on line 330 is not closed after the last access at line 335. 
  333.           tempFile.delete();
  334.           atomicMove.replaceExisting(compressedFile, targetFile);
  335. >     }
  336.   
  337.       protected boolean useGzipCompression(HttpServletRequest request, HttpServletResponse response) throws MalformedURLException {

#49
core/broadleaf-framework-web/src/main/java/org/broadleafcommerce/core/web/breadcrumbs/AbstractBreadcrumbServiceExtensionHandler.java:65: error: Null Dereference
  `paramValues` could be null (null value originating from line 64) and is dereferenced. 
  63.                   for (String key : params.keySet()) {
  64.                       String[] paramValues = params.get(key);
  65. >                     for (String value : paramValues) {
  66.                           builder.addParameter(key, value);
  67.                       }

#50
core/broadleaf-framework-web/src/main/java/org/broadleafcommerce/core/web/expression/checkout/CheckoutStageVariableExpression.java:41: error: Null Dereference
  `currentStageType` could be null (from the call to `CheckoutStageType.getInstance(...)` on line 38) and is dereferenced. 
  39.           CheckoutStageType activeStageType = CheckoutStageType.getInstance(activeStage);
  40.   
  41. >         return currentStageType.compareTo(activeStageType) < 0;
  42.       }
  43.   

#51
core/broadleaf-framework-web/src/main/java/org/broadleafcommerce/core/web/expression/checkout/CheckoutStageVariableExpression.java:48: error: Null Dereference
  `currentStageType` could be null (from the call to `CheckoutStageType.getInstance(...)` on line 45) and is dereferenced. 
  46.           CheckoutStageType activeStageType = CheckoutStageType.getInstance(activeStage);
  47.   
  48. >         return currentStageType.compareTo(activeStageType) == 0;
  49.       }
  50.   

#52
core/broadleaf-framework-web/src/main/java/org/broadleafcommerce/core/web/expression/checkout/CheckoutStageVariableExpression.java:55: error: Null Dereference
  `currentStageType` could be null (from the call to `CheckoutStageType.getInstance(...)` on line 52) and is dereferenced. 
  53.           CheckoutStageType activeStageType = CheckoutStageType.getInstance(activeStage);
  54.   
  55. >         return currentStageType.compareTo(activeStageType) > 0;
  56.       }
  57.   

#53
core/broadleaf-framework-web/src/main/java/org/broadleafcommerce/core/web/linkeddata/generator/ProductLinkedDataGeneratorImpl.java:202: error: Null Dereference
  `lowPrice` could be null (null value originating from line 163) and is dereferenced. 
  200.               aggregateOffer.put("@type", "AggregateOffer");
  201.               aggregateOffer.put("highPrice", highPrice.doubleValue());
  202. >             aggregateOffer.put("lowPrice", lowPrice.doubleValue());
  203.               aggregateOffer.put("priceCurrency", currency);
  204.               aggregateOffer.put("offerCount", offers.length());

#54
core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/catalog/domain/SkuImpl.java:501: error: Null Dereference
  `dynamicPrices` could be null (from the call to `SkuPricingConsiderationContext.getDynamicSkuPrices(...)` on line 500) and is dereferenced. 
  499.               // We have dynamic pricing, so we will pull the sale price from there
  500.               DynamicSkuPrices dynamicPrices = SkuPricingConsiderationContext.getDynamicSkuPrices(this);
  501. >             returnPrice = dynamicPrices.getSalePrice();
  502.               optionValueAdjustments = dynamicPrices.getPriceAdjustment();
  503.               if (SkuPricingConsiderationContext.isPricingConsiderationActive()) {

#55
core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/catalog/domain/SkuImpl.java:553: error: Null Dereference
  `dynamicPrices` could be null (from the call to `SkuPricingConsiderationContext.getDynamicSkuPrices(...)` on line 552) and is dereferenced. 
  551.               // We have dynamic pricing, so we will pull the retail price from there
  552.               DynamicSkuPrices dynamicPrices = SkuPricingConsiderationContext.getDynamicSkuPrices(this);
  553. >             returnPrice = dynamicPrices.getRetailPrice();
  554.               optionValueAdjustments = dynamicPrices.getPriceAdjustment();
  555.               if (SkuPricingConsiderationContext.isPricingConsiderationActive()) {

#56
core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/offer/service/discount/domain/PromotableOfferUtilityImpl.java:81: error: Null Dereference
  null (null value originating from line 81) is dereferenced in the call to `PromotableOfferUtilityImpl.determineOfferUnitValue(...)`. 
  79.           Offer offer = promotableCandidateFulfillmentGroupOffer.getOffer();
  80.           BroadleafCurrency currency = promotableFulfillmentGroup.getFulfillmentGroup().getOrder().getCurrency();
  81. >         BigDecimal offerUnitValue = determineOfferUnitValue(offer, null);
  82.           OfferDiscountType discountType = offer.getDiscountType();
  83.           return computeAdjustmentValue(currentPriceDetailValue, offerUnitValue, currency, discountType, promotableCandidateFulfillmentGroupOffer);

#57
core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/offer/service/processor/FulfillmentGroupOfferProcessorImpl.java:183: error: Null Dereference
  `fgOffers` could be null (null value originating from line 179) and is dereferenced. 
  181.               Collections.sort(fgOffers, new BeanComparator("priority", new NullComparator()));
  182.   
  183. >             if (potential.getOffer().isLimitedUsePerOrder() && fgOffers.size() > potential.getOffer().getMaxUsesPerOrder()) {
  184.                   for (int j = potential.getOffer().getMaxUsesPerOrder(); j < fgOffers.size(); j++) {
  185.                       fgOffers.remove(j);

#58
core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/offer/service/processor/FulfillmentGroupOfferProcessorImpl.java:223: error: Null Dereference
  `candidates` could be null (null value originating from line 222) and is dereferenced. 
  221.               boolean alreadyContainsTotalitarianOffer = order.isTotalitarianOfferApplied();
  222.               List<PromotableCandidateFulfillmentGroupOffer> candidates = offerMap.get(potential);
  223. >             for (PromotableCandidateFulfillmentGroupOffer candidate : candidates) {
  224.                   applyFulfillmentGroupOffer(candidate.getFulfillmentGroup(), candidate);
  225.                   fgOfferApplied = true;

#59
core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/offer/service/processor/OrderOfferProcessorImpl.java:469: error: Null Dereference
  `itemAdjustment` could be null (null value originating from line 468) and is dereferenced. 
  467.           for (PromotableOrderItemPriceDetailAdjustment adjustment : promotableItemDetail.getCandidateItemAdjustments()) {
  468.               OrderItemPriceDetailAdjustment itemAdjustment = itemAdjustmentMap.get(adjustment.getOfferId());
  469. >             if (!itemAdjustment.getValue().equals(adjustment.getAdjustmentValue())) {
  470.                   itemAdjustment.setValue(adjustment.getAdjustmentValue());
  471.                   itemAdjustment.setAppliedToSalePrice(adjustment.isAppliedToSalePrice());

#60
core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/offer/service/workflow/RecordOfferUsageRollbackHandler.java:51: error: Null Dereference
  `audits` could be null (null value originating from line 49) and is dereferenced. 
  49.           List<OfferAudit> audits = (List<OfferAudit>) stateConfiguration.get(RecordOfferUsageActivity.SAVED_AUDITS);
  50.           
  51. >         for (OfferAudit audit : audits) {
  52.               offerAuditService.delete(audit);
  53.           }

#61
core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/order/service/OrderServiceImpl.java:1041: error: Null Dereference
  `itemTwoValue` could be null (null value originating from line 1040) and is dereferenced. 
  1039.               String itemOneValue = (item1Attributes.get(key) == null) ? null : item1Attributes.get(key).getValue();
  1040.               String itemTwoValue = item2.getItemAttributes().get(key);
  1041. >             if (!itemTwoValue.equals(itemOneValue)) {
  1042.                   return false;
  1043.               }

#62
core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/order/service/legacy/LegacyMergeCartServiceImpl.java:339: error: Null Dereference
  `info` could be null (null value originating from line 337) and is dereferenced. 
  337.                   OfferInfo info = anonymousCart.getAdditionalOfferInformation().get(anonymousOffer.getOffer());
  338.                   OfferInfo offerInfo = offerDao.createOfferInfo();
  339. >                 for (String key : info.getFieldValues().keySet()) {
  340.                       offerInfo.getFieldValues().put(key, info.getFieldValues().get(key));
  341.                   }

#63
core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/order/service/legacy/LegacyOrderServiceImpl.java:337: error: Null Dereference
  `orderItem` could be null (null value originating from line 330) and is dereferenced. 
  335.           }
  336.           
  337. >         orderItem.setQuantity(orderItemRequestDTO.getQuantity());
  338.           
  339.           updateItemQuantity(order, orderItem, true);

#64
core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/order/service/workflow/update/ValidateUpdateRequestActivity.java:65: error: Null Dereference
  null (null value originating from line 65) is dereferenced. 
  63.   
  64.           for (String key : requestedOrderItem.getOrderItemAttributes().keySet()) {
  65. >             attributes.put(key, requestedOrderItem.getOrderItemAttributes().get(key).getValue());
  66.           }
  67.   

#65
core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/payment/domain/OrderPaymentImpl.java:333: error: Null Dereference
  `PaymentType OrderPaymentImpl.getType()` could be null (from the call to `OrderPaymentImpl.getType()` on line 333) and is dereferenced. 
  331.       @Override
  332.       public boolean isFinalPayment() {
  333. >         return getType().getIsFinalPayment();
  334.       }
  335.   

#66
core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/pricing/service/workflow/AutoBundleActivity.java:95: error: Null Dereference
  `maxApplications` could be null (null value originating from line 86) and is dereferenced. 
  93.               processedBundleIds.add(productBundle.getId());
  94.   
  95. >             if (maxApplications != existingUses) {
  96.                   if (! itemsHaveBeenUnbundled) {
  97.                       // Store the discrete items that were part of automatic bundles

#67
core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/search/domain/FieldImpl.java:124: error: Null Dereference
  `FieldEntity FieldImpl.getEntityType()` could be null (from the call to `FieldImpl.getEntityType()` on line 124) and is dereferenced. 
  122.       @Override
  123.       public String getQualifiedFieldName() {
  124. >         return getEntityType().getFriendlyType() + "." + propertyName;
  125.       }
  126.   

#68
core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/search/service/solr/BroadleafCloudSolrClient.java:66: error: Null Dereference
  null (null value originating from line 66) is dereferenced in the call to `BroadleafCloudSolrClient.createBuilder(...)`. 
  64.   
  65.       public BroadleafCloudSolrClient(String zkHost, LBHttpSolrClient lbClient) {
  66. >         super(createBuilder(zkHost, lbClient, null));
  67.       }
  68.   

#69
core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/search/service/solr/SolrHelperServiceImpl.java:890: error: Null Dereference
  `FieldType FieldType.getInstance(String)` could be null (from the call to `FieldType.getInstance(...)` on line 891) and is dereferenced in the call to `SolrHelperServiceImpl.getPropertyNameForIndexField(...)`. 
  888.               @Override
  889.               public String getKey(SearchFacetDTO facet) {
  890. >                 return getPropertyNameForIndexField(facet.getFacet().getFieldType().getIndexField(),
  891.                           FieldType.getInstance(facet.getFacet().getFacetFieldType()));
  892.               }

#70
core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/search/service/solr/SolrHelperServiceImpl.java:937: error: Null Dereference
  null (null value originating from line 937) is dereferenced. 
  935.   
  936.                   List<String> valueStrings = new ArrayList<>();
  937. >                 ExtensionResultStatusType status = searchExtensionManager.getProxy().buildActiveFacetFilter(namedFacetMap.get(solrKey).getFacet(), selectedValues, valueStrings);
  938.   
  939.                   if (ExtensionResultStatusType.NOT_HANDLED.equals(status)) {

Found 71 issues
                Issue Type(ISSUED_TYPE_ID): #
     Null Dereference(NULLPTR_DEREFERENCE): 61
  Pulse Resource Leak(PULSE_RESOURCE_LEAK): 10
